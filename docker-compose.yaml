services:
  gateway-service:
    build: ./gateway-service
    command: ["sh",start.sh]
    environment:
      - PORT=3000
      - CATEGORY_SERVICE_URL=http://category-service:3001
      - PRODUCT_SERVICE_URL=http://product-service:3002
    ports:
      - 3000:3000
    depends_on:
      - category-service
      - product-service
    networks:
      - gateway-network

  category-service:
    build: ./category-service
    command: ["sh",start.sh]
    environment:
      - PORT=3001
      - DATABASE_URL=postgresql://usuario:senha@postgres:5432/meubanco?schema=public
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - categories-network
      - gateway-network

  product-service:
    build: ./product-service
    command: ["sh",start.sh]
    environment:
      - PORT=3002
      - MONGO_HOST=mongodb://usuario:senha@mongo:27017/product?authSource=admin
      - MONGO_PRODUCT_COLLECTION=products
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - products-network
      - gateway-network

  postgres:
    image: postgres:17.2-alpine
    environment:
      - POSTGRES_USER=usuario
      - POSTGRES_PASSWORD=senha
      - POSTGRES_DB=meubanco 
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - categories-network
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: usuario
      MONGO_INITDB_ROOT_PASSWORD: senha
    healthcheck:
      test: ["CMD-SHELL", "mongosh","--eval","db.adminCommand('ping')"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - products-network
networks:
  categories-network:
  products-network:
  gateway-network:
